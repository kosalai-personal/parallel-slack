name: Cypress Automated Tests
on: [push]
permissions:
  contents: write
  pages: write
jobs:
  setup:
    name: Install & pre-test 🛠 
    runs-on: ubuntu-latest    
    strategy:
      fail-fast: false 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: cypress-io/github-action@v3
        with:
          runTests: false
      - name: Cypress clean
        run: npm run clean:reports
      - name: Create reports directory
        run: mkdir reports 
  execution:
    name: Execution ⏳
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        containers: [ 0, 1, 2, 3, 4, 5 ]
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: |
         echo "specs=$(node cypress-partial.js 6 ${{ matrix.containers }})" >> $GITHUB_ENV
      - name: Cypress run 
        uses: cypress-io/github-action@v3
        with:
          command: npx cypress run --spec ${{ env.specs }}
          browser: chrome
        continue-on-error: true
      - name: Copy test execution videos
        run: |
          mkdir public
          cp -r cypress/videos public/videos
      - name: Upload mochawesome report
        uses: actions/upload-artifact@v3
        with:
          name: test-reports-${{ matrix.containers }}
          path: mochawesome-report
      - uses: actions/upload-artifact@v3
        with:
          name: Cypress screenshots
          path: Screenshots
      - uses: actions/upload-artifact@v3
        with:
          name: Cypress videos
          path: public/videos 

  reporting:
    name: Cypress reporting & deployment 🚀
    needs: [setup,execution]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Cypress screenshots
          path: Screenshots
      - uses: actions/download-artifact@v3
        with:
          name: Cypress videos
          path: public/videos
      - name: Download test-reports
        uses: actions/download-artifact@v3
        with:
          path: reports/
      - name: Move all reports into one directory
        run: |
          mkdir -p mochawesome-report
          i=0
          for file in $(find reports -type f -name mochawesome\*.json); do
            filename=$(basename "$file" .json)-"$i".json
            mv "$file" mochawesome-report/"$filename"
            ls mochawesome-report
            i=$((i + 1))
          done
      - name: Merge and generate reports
        run: |
          cp -r Screenshots/**/*.png public
          npx mochawesome-merge > public/index.json
          npx mochawesome-report-generator --reportDir public public/index.json
      - uses: actions/upload-artifact@v3
        with:
          name: Final report
          path: public
      - name: Deploy to GitHub Pages 
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./public
      - name: Slack report
        run: |
          npx cypress-slack-reporter --ci-provider --ci-provider github --report-dir public 
          curl -X POST -H 'Content-type: application/json' --data '{"text":"*_Here is the generated HTML report!! 🚀_*"}' $SLACK_WEBHOOK_URL
          curl -X POST -H 'Content-type: application/json' --data '{"text":"https://kosalai-personal.github.io/parallel-slack/"}' $SLACK_WEBHOOK_URL
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}




















